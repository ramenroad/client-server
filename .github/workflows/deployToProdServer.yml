name: Deploy to Main Client Server (AWS EC2)

on:
  push:
    branches: [main]

env:
  DOCKER_IMAGE: ghcr.io/ramenroad/client-server-prod
  NAME: client-server-prod

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v3

      - name: Set up docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract short SHA
        id: vars
        run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:latest
            ${{ env.DOCKER_IMAGE }}:${{ env.SHORT_SHA }}
          build-args: |
            BUILD_ENV=prod
            DIGITAL_TWIN_KEY_DEV=${{ secrets.DIGITAL_TWIN_KEY_DEV }}
            ENV_NAME=${{ secrets.ENV_NAME }}
            JWT_AT_SECRET=${{ secrets.JWT_AT_SECRET }}
            JWT_RT_SECRET=${{ secrets.JWT_RT_SECRET }}
            KAKAO_REST_API_KEY=${{ secrets.KAKAO_REST_API_KEY }}
            MONGODB_DB_NAME=${{ secrets.MONGODB_DB_NAME }}
            MONGODB_URL=${{ secrets.MONGODB_URL }}
            S3_ACCESS_KEY=${{ secrets.S3_ACCESS_KEY }}
            S3_SECRET_KEY=${{ secrets.S3_SECRET_KEY }}
            S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }}

  deploy:
    needs: build
    name: Deploy
    runs-on: [ramenroad-org]
    steps:
      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy Docker
        run: |
          docker stop ${{ env.NAME }} || true
          docker rm ${{ env.NAME }} || true
          docker rmi ${{ env.DOCKER_IMAGE }}:latest || true
          docker run -d -p 3000:3000 --name ${{ env.NAME }} --restart always ${{ env.DOCKER_IMAGE }}:latest